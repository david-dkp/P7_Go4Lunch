plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "fr.feepin.go4lunch"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        Properties properties = new Properties()
        if (rootProject.file("local.properties").exists()) {
            properties.load(rootProject.file("local.properties").newDataInputStream())
        }

        // Inject the Maps API key into the manifest
        manifestPlaceholders = [ mapsApiKey : properties.getProperty("MAPS_API_KEY", "") ]
        buildConfigField("String", "MAPS_API_KEY", "\"${properties.getProperty("MAPS_API_KEY", "")}\"")
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //Multidex
    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"

    //Firebase
    implementation platform('com.google.firebase:firebase-bom:27.0.0')
    implementation 'com.google.firebase:firebase-firestore'
    implementation 'com.google.firebase:firebase-auth'

    //Maps
    def maps_version = "17.0.1"
    implementation "com.google.android.gms:play-services-maps:$maps_version"

    //Maps util
    def maps_util_version = "2.2.2"
    implementation "com.google.maps.android:android-maps-utils:$maps_util_version"

    //Places
    def places_version = "2.4.0"
    implementation "com.google.android.libraries.places:places:$places_version"

    //Play services
    def play_services_version = "19.0.0"
    implementation "com.google.android.gms:play-services-auth:$play_services_version"

    //Glide
    def glide_version = "4.12.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    //Glide transformations
    def glide_transformation_version = "4.2.0"
    implementation "jp.wasabeef:glide-transformations:$glide_transformation_version"

    //Facebook
    implementation 'com.facebook.android:facebook-login:9.1.1'

    //Retrofit
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava3:$retrofit_version"

    //OkHttp
    def okhttp_version = "3.12.12"
    implementation('com.squareup.okhttp3:okhttp') { version { strictly okhttp_version  } }
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    //Dagger Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    annotationProcessor "com.google.dagger:hilt-compiler:$hilt_version"

    //Dagger hilt - Work manager
    def hilt_work_version = "1.0.0"
    implementation "androidx.hilt:hilt-work:$hilt_work_version"
    annotationProcessor "androidx.hilt:hilt-compiler:$hilt_work_version"

    //Concurrent
    def concurrent_version = "1.1.0"
    implementation "androidx.concurrent:concurrent-futures:$concurrent_version"

    //RxAndroid
    def rxandroid_version = "3.0.0"
    implementation "io.reactivex.rxjava3:rxandroid:$rxandroid_version"
    implementation "io.reactivex.rxjava3:rxjava:$rxandroid_version"

    //Datastore
    def datastore_version = "1.0.0-beta01"
    implementation "androidx.datastore:datastore-preferences:$datastore_version"
    implementation "androidx.datastore:datastore-preferences-rxjava3:$datastore_version"

    //WorkManager
    def work_version = "2.6.0-alpha02"
    implementation "androidx.work:work-runtime:$work_version"
    implementation "androidx.work:work-rxjava3:$work_version"
    androidTestImplementation "androidx.work:work-testing:$work_version"

    //Preferences
    def preferences_version = "1.1.1"
    implementation "androidx.preference:preference:$preferences_version"

    //Mockito
    def mockito_version = "3.0.0"
    testImplementation "org.mockito:mockito-core:$mockito_version"

    //PowerMockito
    def power_mockito_version = "2.0.9"
    testImplementation "org.powermock:powermock-module-junit4:$power_mockito_version"
    testImplementation "org.powermock:powermock-api-mockito2:$power_mockito_version"

    //Core testing
    testImplementation "androidx.arch.core:core-testing:2.1.0"
}